CREATE TABLE VACINA (
  VACINA_ID SERIAL PRIMARY KEY,
  VACINA_NOME TEXT NOT NULL,
  VACINA_DOSE INT NOT NULL,
  VACINA_INTERVALO INT NOT NULL,
  VACINA_TIPO TEXT NOT NULL,
  VACINA_STATUS BOOLEAN NOT NULL,
  FK_TIPOVACINA VARCHAR NOT NULL, #ENUM 
);

#TABELA PARA RESTRICAO   CRIADO
CREATE TABLE RESTRICAO (
  RESTRICAO_ID SERIAL PRIMARY KEY,
  RESTRICAO_NOME TEXT NOT NULL,
  RESTRICAO_TIPO TEXT NOT NULL,
  RESTRICAO_STATUS BOOLEAN NOT NULL
);

#TABELA ENDERECO  CRIADO
CREATE TABLE ENDERECO (
  ENDERECO_ID SERIAL primary key,
  ENDERECO_LOGADOURO TEXT NOT NULL,
  ENDERECO_NUMERO INTEGER NOT NULL,
  ENDERECO_CIDADE TEXT NOT NULL,
  ENDERECO_BAIRRO TEXT NOT NULL,
  ENDERECO_COMPLEMENTO TEXT,
  ENDERECO_CEP INTEGER NOT NULL,
  ENDERECO_UF TEXT NOT NULL,
  ENDERECO_STATUS boolean not null
);

//TABELA N/N DE VACINA PARA RESTRICAO
CREATE TABLE VACINA_HAS_RESTRICAO (
  FK_RESTRICOES INTEGER NOT NULL,
  FK_VACINA INTEGER NOT NULL,
  CONSTRAINT VACINA_HAS_RESTRICAO FOREIGN KEY (FK_RESTRICOES) REFERENCES RESTRICAO (RESTRICAO_ID),
  CONSTRAINT RESTRICAO_HAS_VACINA FOREIGN KEY (FK_VACINA) REFERENCES VACINA (VACINA_ID)
);

#TABELA DO USUARIO   CRIADO
CREATE TABLE usuario (
  USUARIO_ID serial primary key,
  USUARIO_NOME TEXT NOT NULL,
  USUARIO_IDADE INTEGER NOT NULL,
  USUARIO_CPF TEXT NOT NULL,
  USUARIO_RG TEXT NOT NULL,
  USUARIO_SENHA varchar not null,
  USUARIO_TELEFONE BIGINT NOT NULL,
  USUARIO_CELULAR BIGINT NOT NULL,
  USUARIO_TIPOSANGUE TEXT NOT NULL,
  USUARIO_PESO NUMERIC NOT NULL,
  USUARIO_ALTURA NUMERIC NOT NULL,
  USUARIO_NASCIMENTO DATE NOT NULL,
  USUARIO_ACESSO TEXT NOT NULL,
  USUARIO_RESPONSAVEL INT,
  USUARIO_STATUS boolean NOT NULL,
  FK_ENDERECO INT NOT NULL,
  CONSTRAINT USUARIO_HAS_ENDERECO FOREIGN KEY (FK_ENDERECO) REFERENCES ENDERECO (ENDERECO_ID)
);

CREATE TABLE USUARIO_RESPONSAVEL (
   USUARIO_RESPONSAVEL INT NOT NULL,
   USUARIO_DEPENDENTE INT NOT NULL,
   CONSTRAINT USUARIO_HAS_RESPONSAVEL FOREIGN KEY (USUARIO_RESPONSAVEL) REFERENCES USUARIO (USUARIO_ID),
   CONSTRAINT USUARIO_HAS_DEPENDENTE FOREIGN KEY (USUARIO_DEPENDENTE) REFERENCES USUARIO (USUARIO_ID)   
);


#FUNCIONARIO PRECISA DE LOGIN E SENHA PARA REALIZAR O ACESSO // LEMBRANDO QUE TODO FUNCIONARIO TEM O ACESSO DE USUARIO REFERENCIADO NA TABELA USUARIO
CREATE TABLE FUNCIONARIO (
  FUNCIONARIO_ID SERIAL PRIMARY KEY,
  FUNCIONARIO_CONFEN BIGINT NOT NULL,
  FUNCIONARIO_SENHA VARCHAR NOT NULL,
  FUNCIONARIO_ACESSO TEXT NOT NULL,
  FK_USUARIO INT NOT NULL,
  CONSTRAINT FUNCIONARIO_HAS_USUARIO FOREIGN KEY (FK_USUARIO) REFERENCES USUARIO (USUARIO_ID)
  );


#FALTA CRIAR // CALENDARIO DE VACINAS OBRIGATORIOS QUE TODOS USUARIO PRECISA TOMAR DEPENDENDO DA RESTRICOESs
CREATE TABLE CALENDARIO_OBRIGATORIO(
  CALENDARIOOB_ID SERIAL PRIMARY KEY,
  CALENDARIOOB_DIASDEVIDA INT NOT NULL,
  CALENDARIOOB_COMENTARIO VARCHAR(150),
  FK_FUNCIONARIO INT NOT NULL, 
  FK_VACINA INT NOT NULL,
  CALENDARIOOB_DATACADASTRO DATE NOT NULL,
  CALENDARIOOB_GORACADASTRO TIME NOT NULL, 
  CONSTRAINT calendarioOB_has_funcionario FOREIGN KEY (FK_FUNCIONARIO) REFERENCES FUNCIONARIO (FUNCIONARIO_ID),
  CONSTRAINT calendarioOB_has_vacina FOREIGN KEY (FK_Vacina) REFERENCES VACINA (VACINA_ID)
);

#TABELA N/N da TABELA calendario_obrigatorio e TABELA RESTRICAO
CREATE TABLE calendarioOB_has_Restricoes(
  FK_CALENDARIOOB INT NOT NULL,
  FK_RESTRICAO INT NOT NULL,
  CONSTRAINT CALENDARIO_HAS_CALENDARIO foreign key (FK_CALENDARIOOB) REFERENCES CALENDARIO_OBRIGATORIO (CALENDARIOOB_ID),
  CONSTRAINT RESTRICAO_HAS_RESTRICAO foreign key (FK_RESTRICAO) REFERENCES RESTRICAO (RESTRICAO_ID)
);


CREATE TABLE CARDENETA_USUARIO(
    FK_USUARIO int not null,
	FK_CALENDARIOOB int,
	FK_CAMPANHA int,
	FK_FUNCIONARIO not null,
	CADERNETA_DATA date not null,
	CADERNETA_HORA time not null,
	CONSTRAINT CARDENETA_FK_USUARIO FOREIGN KEY (FK_USUARIO) REFERENCES USUARIO (USUARIO_ID),
	CONSTRAINT CARDENETA_FK_CALENDARIOOB FOREIGN KEY (FK_CALENDARIOOB) REFERENCES CALENDARIO_OBRIGATORIO (calendarioOB_id),
	CONSTRAINT CARDENETA_FK_CAMPANHA FOREIGN KEY (FK_CAMPANHA) REFERENCES CAMPANHA (CAMPANHA_ID),
	CONSTRAINT CARDENETA_FK_FUNCIONARIO FOREIGN KEY (FK_FUNCIONARIO) REFERENCES FUNCIONARIO (FUNCIONARIO_ID)
);


#TABELA DA CAMPANHA
CREATE TABLE CAMPANHA (
  CAMPANHA_ID serial primary key,
  CAMPANHA_NOME TEXT NOT NULL,
  CAMPANHA_INICIO DATE NOT NULL,
  CAMPANHA_FINAL DATE NOT NULL,
  FK_VACINA integer not null,
  CAMPANHA_STATUS BOOLEAN NOT NULL,
  CONSTRAINT CAMPANHA_HAS_VACINA FOREIGN KEY (FK_VACINA) REFERENCES VACINA (VACINA_ID)
);


#TABELA N/N DA TABELA CAMPANHA E DA TABELA RESTRICAO
CREATE TABLE CAMPANHA_HAS_RESTRICAO (
  FK_CAMPANHA INTEGER NOT NULL,
  FK_RESTRICAO INTEGER NOT NULL,
  CONSTRAINT CAMPANHA_HAS_RESTRICAO FOREIGN KEY (FK_CAMPANHA) REFERENCES CAMPANHA (CAMPANHA_ID),
  CONSTRAINT CAMPANHA_HAS_RESTRICAO FOREIGN KEY (FK_RESTRICAO) REFERENCES RESTRICAO (RESTRICAO_ID)
);

#CADASTRO DE POSTO DE SAUDE PARA INFORMAR NO CADASTRO CALENDARIO_USUARIO
CREATE TABLE POSTO (
  POSTO_ID SERIAL PRIMARY KEY,
  POSTO_NOME TEXT NOT NULL,
  POSTO_TELEFONE INTEGER NOT NULL,
  FK_ENDERECO INTEGER NOT NULL,
  CONSTRAINT POSTO_HAS_ENDERECO foreign key (FK_ENDERECO) references ENDERECO (ENDERECO_ID)
);

#TABELA N/N DA TABELA USUARIO E TABELA RESTRICAO // FEITO PARA ARMAZENAR AS RESTRICOES DA VACINA 
CREATE TABLE usuario_has_restricao (
  FK_USUARIO INTEGER NOT NULL,
  FK_RESTRICAO INTEGER NOT NULL,
  CONSTRAINT usuario_has_restricao_FK1 foreign key (FK_USUARIO) references USUARIO (USUARIO_ID),
  CONSTRAINT usuario_has_restricao_FK2 foreign key (FK_RESTRICAO) references RESTRICAO (RESTRICAO_ID)
);